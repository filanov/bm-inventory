// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/filanov/bm-inventory/models"
)

// RegisterInstalledClusterCreatedCode is the HTTP code returned for type RegisterInstalledClusterCreated
const RegisterInstalledClusterCreatedCode int = 201

/*RegisterInstalledClusterCreated Success.

swagger:response registerInstalledClusterCreated
*/
type RegisterInstalledClusterCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewRegisterInstalledClusterCreated creates RegisterInstalledClusterCreated with default headers values
func NewRegisterInstalledClusterCreated() *RegisterInstalledClusterCreated {

	return &RegisterInstalledClusterCreated{}
}

// WithPayload adds the payload to the register installed cluster created response
func (o *RegisterInstalledClusterCreated) WithPayload(payload *models.Cluster) *RegisterInstalledClusterCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register installed cluster created response
func (o *RegisterInstalledClusterCreated) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInstalledClusterCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInstalledClusterBadRequestCode is the HTTP code returned for type RegisterInstalledClusterBadRequest
const RegisterInstalledClusterBadRequestCode int = 400

/*RegisterInstalledClusterBadRequest Error.

swagger:response registerInstalledClusterBadRequest
*/
type RegisterInstalledClusterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterInstalledClusterBadRequest creates RegisterInstalledClusterBadRequest with default headers values
func NewRegisterInstalledClusterBadRequest() *RegisterInstalledClusterBadRequest {

	return &RegisterInstalledClusterBadRequest{}
}

// WithPayload adds the payload to the register installed cluster bad request response
func (o *RegisterInstalledClusterBadRequest) WithPayload(payload *models.Error) *RegisterInstalledClusterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register installed cluster bad request response
func (o *RegisterInstalledClusterBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInstalledClusterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInstalledClusterInternalServerErrorCode is the HTTP code returned for type RegisterInstalledClusterInternalServerError
const RegisterInstalledClusterInternalServerErrorCode int = 500

/*RegisterInstalledClusterInternalServerError Error.

swagger:response registerInstalledClusterInternalServerError
*/
type RegisterInstalledClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterInstalledClusterInternalServerError creates RegisterInstalledClusterInternalServerError with default headers values
func NewRegisterInstalledClusterInternalServerError() *RegisterInstalledClusterInternalServerError {

	return &RegisterInstalledClusterInternalServerError{}
}

// WithPayload adds the payload to the register installed cluster internal server error response
func (o *RegisterInstalledClusterInternalServerError) WithPayload(payload *models.Error) *RegisterInstalledClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register installed cluster internal server error response
func (o *RegisterInstalledClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInstalledClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
