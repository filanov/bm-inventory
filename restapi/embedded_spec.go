// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Bare metal inventory",
    "title": "BMInventory",
    "version": "1.0.0"
  },
  "host": "api.openshift.com",
  "basePath": "/api/bm-inventory/v1",
  "paths": {
    "/clusters": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "List OpenShift bare metal clusters",
        "operationId": "ListClusters",
        "responses": {
          "200": {
            "description": "Cluster list",
            "schema": {
              "$ref": "#/definitions/cluster-list"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Register a new OpenShift bare metal cluster",
        "operationId": "RegisterCluster",
        "parameters": [
          {
            "description": "New cluster parameters",
            "name": "new-cluster-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registered cluster",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/clusters/{cluster_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Retrieve OpenShift bare metal cluster information",
        "operationId": "GetCluster",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the cluster to retrieve",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster information",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "404": {
            "description": "Cluster not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "inventory"
        ],
        "summary": "Deregister OpenShift bare metal cluster",
        "operationId": "DeregisterCluster",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the cluster to retrieve",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Cluster deregistered"
          },
          "404": {
            "description": "Cluster not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "List OpenShift bare metal hosts",
        "operationId": "ListHosts",
        "responses": {
          "200": {
            "description": "Host list",
            "schema": {
              "$ref": "#/definitions/host-list"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Register a new OpenShift bare metal host",
        "operationId": "RegisterHost",
        "parameters": [
          {
            "description": "New host parameters",
            "name": "new-host-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/host-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registered host",
            "schema": {
              "$ref": "#/definitions/host"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Retrieve OpenShift bare metal host information",
        "operationId": "GetHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to retrieve",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Host information",
            "schema": {
              "$ref": "#/definitions/host"
            }
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "inventory"
        ],
        "summary": "Deregister OpenShift bare metal host",
        "operationId": "DeregisterHost",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the host to retrieve",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Host deregistered"
          },
          "400": {
            "description": "Host in use"
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}/actions/debug": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Set a single shot debug step that will be sent next time the agent will ask for a command",
        "operationId": "SetDebugStep",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to debug",
            "name": "host_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Next debug step",
            "name": "step",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/debug-step"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registered"
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}/actions/enable": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Enable a host for use",
        "operationId": "EnableHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to enable",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Enabled"
          },
          "404": {
            "description": "Host not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "inventory"
        ],
        "summary": "Disable a host for use",
        "operationId": "DisableHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to disable",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Disabled"
          },
          "404": {
            "description": "Host not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}/next-steps": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Retrieve the next operations that the agent need to perform",
        "operationId": "GetNextSteps",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of host",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Steps information",
            "schema": {
              "$ref": "#/definitions/steps"
            }
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}/next-steps/reply": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Post the result of the required operations from the server",
        "operationId": "PostStepReply",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of host",
            "name": "host_id",
            "in": "path",
            "required": true
          },
          {
            "name": "reply",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/step-reply"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Reply accepted"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/images": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "List installation images",
        "operationId": "ListImages",
        "responses": {
          "200": {
            "description": "Image list",
            "schema": {
              "$ref": "#/definitions/image-list"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Create an OpenShift bare metal cluster-assist installation image",
        "operationId": "CreateImage",
        "parameters": [
          {
            "description": "New image parameters",
            "name": "new-image-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/image-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created image",
            "schema": {
              "$ref": "#/definitions/image"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/images/{image_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Retrieve installation image information",
        "operationId": "GetImage",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the image to retrieve",
            "name": "image_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Image information",
            "schema": {
              "$ref": "#/definitions/image"
            }
          },
          "404": {
            "description": "Image not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "base": {
      "type": "object",
      "required": [
        "kind",
        "id",
        "href"
      ],
      "properties": {
        "href": {
          "type": "string",
          "format": "uri"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-go-custom-tag": "gorm:\"primary_key\" query:\"filter,sort\""
        },
        "kind": {
          "type": "string",
          "enum": [
            "image",
            "host",
            "cluster"
          ]
        }
      }
    },
    "block-device": {
      "type": "object",
      "properties": {
        "device-type": {
          "type": "string"
        },
        "fstype": {
          "type": "string"
        },
        "major-device-number": {
          "type": "integer"
        },
        "minor-device-number": {
          "type": "integer"
        },
        "mountpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "read-only": {
          "type": "boolean"
        },
        "removable-device": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        }
      }
    },
    "cidr": {
      "type": "object",
      "properties": {
        "ip-address": {
          "type": "string"
        },
        "mask": {
          "type": "integer"
        }
      }
    },
    "cluster": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/base"
        },
        {
          "type": "object",
          "required": [
            "status",
            "namespace"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "hosts": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/host"
              },
              "x-go-custom-tag": "gorm:\"foreignkey:ClusterID;association_foreignkey:ID\""
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "creating",
                "ready",
                "error"
              ]
            }
          }
        }
      ]
    },
    "cluster-create-params": {
      "type": "object",
      "required": [
        "name",
        "hosts"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "role": {
                "type": "string",
                "enum": [
                  "master",
                  "worker"
                ]
              }
            }
          },
          "x-go-custom-tag": "gorm:\"type:varchar(64)[]\""
        },
        "name": {
          "type": "string"
        }
      }
    },
    "cluster-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/cluster"
      }
    },
    "connectivity-check-host": {
      "type": "object",
      "properties": {
        "host-id": {
          "type": "string",
          "format": "uuid"
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectivity-check-nic"
          }
        }
      }
    },
    "connectivity-check-nic": {
      "type": "object",
      "properties": {
        "ip-addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mac": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "connectivity-check-params": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/connectivity-check-host"
      }
    },
    "connectivity-remote-host": {
      "type": "object",
      "properties": {
        "host-id": {
          "type": "string",
          "format": "uuid"
        },
        "l2-connectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/l2-connectivity"
          }
        },
        "l3-connectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/l3-connectivity"
          }
        }
      }
    },
    "connectivity-report": {
      "type": "object",
      "properties": {
        "remote-hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectivity-remote-host"
          }
        }
      }
    },
    "cpu": {
      "type": "object",
      "properties": {
        "architecture": {
          "type": "string"
        },
        "cpu-mhz": {
          "type": "number"
        },
        "cpus": {
          "type": "integer"
        },
        "model-name": {
          "type": "string"
        },
        "sockets": {
          "type": "integer"
        },
        "threads-per-core": {
          "type": "integer"
        }
      }
    },
    "debug-step": {
      "type": "object",
      "required": [
        "command"
      ],
      "properties": {
        "command": {
          "type": "string"
        }
      }
    },
    "host": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/base"
        },
        {
          "$ref": "#/definitions/host-create-params"
        },
        {
          "type": "object",
          "required": [
            "kind",
            "status",
            "status_info",
            "connectivity",
            "hardware_info"
          ],
          "properties": {
            "cluster_id": {
              "type": "string",
              "format": "uuid"
            },
            "connectivity": {
              "$ref": "#/definitions/connectivity-report"
            },
            "hardware_info": {
              "$ref": "#/definitions/introspection"
            },
            "role": {
              "type": "string",
              "enum": [
                "undefined",
                "master",
                "worker"
              ]
            },
            "status": {
              "type": "string",
              "enum": [
                "discovering",
                "known",
                "disconnected",
                "insufficient",
                "disabled",
                "installing",
                "installed"
              ]
            },
            "status_info": {
              "type": "string"
            }
          }
        }
      ]
    },
    "host-create-params": {
      "type": "object",
      "required": [
        "namespace",
        "host_id"
      ],
      "properties": {
        "host_id": {
          "type": "string",
          "format": "uuid"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "host-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/host"
      }
    },
    "image": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/base"
        },
        {
          "$ref": "#/definitions/image-create-params"
        },
        {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "download_url": {
              "type": "string",
              "format": "uri"
            },
            "status": {
              "type": "string",
              "enum": [
                "creating",
                "ready",
                "error"
              ]
            }
          }
        }
      ]
    },
    "image-create-params": {
      "type": "object",
      "required": [
        "name",
        "namespace"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "proxy_ip": {
          "type": "string",
          "format": "hostname"
        },
        "proxy_port": {
          "type": "integer",
          "maximum": 65535
        }
      }
    },
    "image-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/image"
      }
    },
    "introspection": {
      "type": "object",
      "properties": {
        "block-devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/block-device"
          }
        },
        "cpu": {
          "$ref": "#/definitions/cpu"
        },
        "memory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/memory"
          }
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nic"
          }
        }
      }
    },
    "l2-connectivity": {
      "type": "object",
      "properties": {
        "outgoing-ip-address": {
          "type": "string"
        },
        "outgoing-nic": {
          "type": "string"
        },
        "remote-ip-address": {
          "type": "string"
        },
        "remote-mac": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        }
      }
    },
    "l3-connectivity": {
      "type": "object",
      "properties": {
        "outgoing-nic": {
          "type": "string"
        },
        "remote-ip-address": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        }
      }
    },
    "memory": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer"
        },
        "buff-cached": {
          "type": "integer"
        },
        "free": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "shared": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        },
        "used": {
          "type": "integer"
        }
      }
    },
    "nic": {
      "type": "object",
      "properties": {
        "cidrs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cidr"
          }
        },
        "mac": {
          "type": "string"
        },
        "mtu": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "step": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "json"
        },
        "step-type": {
          "$ref": "#/definitions/step-type"
        }
      }
    },
    "step-reply": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "exit-code": {
          "type": "integer"
        },
        "output": {
          "type": "string"
        },
        "step-type": {
          "$ref": "#/definitions/step-type"
        }
      }
    },
    "step-type": {
      "type": "string",
      "enum": [
        "hardaware-info",
        "connectivity-check",
        "debug"
      ]
    },
    "steps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/step"
      }
    },
    "steps-reply": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/step-reply"
      }
    }
  },
  "tags": [
    {
      "description": "Manage bare metal inventory",
      "name": "Bare metal inventory"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Bare metal inventory",
    "title": "BMInventory",
    "version": "1.0.0"
  },
  "host": "api.openshift.com",
  "basePath": "/api/bm-inventory/v1",
  "paths": {
    "/clusters": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "List OpenShift bare metal clusters",
        "operationId": "ListClusters",
        "responses": {
          "200": {
            "description": "Cluster list",
            "schema": {
              "$ref": "#/definitions/cluster-list"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Register a new OpenShift bare metal cluster",
        "operationId": "RegisterCluster",
        "parameters": [
          {
            "description": "New cluster parameters",
            "name": "new-cluster-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registered cluster",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/clusters/{cluster_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Retrieve OpenShift bare metal cluster information",
        "operationId": "GetCluster",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the cluster to retrieve",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster information",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "404": {
            "description": "Cluster not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "inventory"
        ],
        "summary": "Deregister OpenShift bare metal cluster",
        "operationId": "DeregisterCluster",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the cluster to retrieve",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Cluster deregistered"
          },
          "404": {
            "description": "Cluster not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "List OpenShift bare metal hosts",
        "operationId": "ListHosts",
        "responses": {
          "200": {
            "description": "Host list",
            "schema": {
              "$ref": "#/definitions/host-list"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Register a new OpenShift bare metal host",
        "operationId": "RegisterHost",
        "parameters": [
          {
            "description": "New host parameters",
            "name": "new-host-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/host-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registered host",
            "schema": {
              "$ref": "#/definitions/host"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Retrieve OpenShift bare metal host information",
        "operationId": "GetHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to retrieve",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Host information",
            "schema": {
              "$ref": "#/definitions/host"
            }
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "inventory"
        ],
        "summary": "Deregister OpenShift bare metal host",
        "operationId": "DeregisterHost",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the host to retrieve",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Host deregistered"
          },
          "400": {
            "description": "Host in use"
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}/actions/debug": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Set a single shot debug step that will be sent next time the agent will ask for a command",
        "operationId": "SetDebugStep",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to debug",
            "name": "host_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Next debug step",
            "name": "step",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/debug-step"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registered"
          },
          "404": {
            "description": "Host not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}/actions/enable": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Enable a host for use",
        "operationId": "EnableHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to enable",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Enabled"
          },
          "404": {
            "description": "Host not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "inventory"
        ],
        "summary": "Disable a host for use",
        "operationId": "DisableHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to disable",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Disabled"
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}/next-steps": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Retrieve the next operations that the agent need to perform",
        "operationId": "GetNextSteps",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of host",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Steps information",
            "schema": {
              "$ref": "#/definitions/steps"
            }
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hosts/{host_id}/next-steps/reply": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Post the result of the required operations from the server",
        "operationId": "PostStepReply",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of host",
            "name": "host_id",
            "in": "path",
            "required": true
          },
          {
            "name": "reply",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/step-reply"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Reply accepted"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Host not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/images": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "List installation images",
        "operationId": "ListImages",
        "responses": {
          "200": {
            "description": "Image list",
            "schema": {
              "$ref": "#/definitions/image-list"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Create an OpenShift bare metal cluster-assist installation image",
        "operationId": "CreateImage",
        "parameters": [
          {
            "description": "New image parameters",
            "name": "new-image-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/image-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created image",
            "schema": {
              "$ref": "#/definitions/image"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/images/{image_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Retrieve installation image information",
        "operationId": "GetImage",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the image to retrieve",
            "name": "image_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Image information",
            "schema": {
              "$ref": "#/definitions/image"
            }
          },
          "404": {
            "description": "Image not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "ClusterCreateParamsHostsItems0": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "role": {
          "type": "string",
          "enum": [
            "master",
            "worker"
          ]
        }
      }
    },
    "base": {
      "type": "object",
      "required": [
        "kind",
        "id",
        "href"
      ],
      "properties": {
        "href": {
          "type": "string",
          "format": "uri"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-go-custom-tag": "gorm:\"primary_key\" query:\"filter,sort\""
        },
        "kind": {
          "type": "string",
          "enum": [
            "image",
            "host",
            "cluster"
          ]
        }
      }
    },
    "block-device": {
      "type": "object",
      "properties": {
        "device-type": {
          "type": "string"
        },
        "fstype": {
          "type": "string"
        },
        "major-device-number": {
          "type": "integer"
        },
        "minor-device-number": {
          "type": "integer"
        },
        "mountpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "read-only": {
          "type": "boolean"
        },
        "removable-device": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        }
      }
    },
    "cidr": {
      "type": "object",
      "properties": {
        "ip-address": {
          "type": "string"
        },
        "mask": {
          "type": "integer"
        }
      }
    },
    "cluster": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/base"
        },
        {
          "type": "object",
          "required": [
            "status",
            "namespace"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "hosts": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/host"
              },
              "x-go-custom-tag": "gorm:\"foreignkey:ClusterID;association_foreignkey:ID\""
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "creating",
                "ready",
                "error"
              ]
            }
          }
        }
      ]
    },
    "cluster-create-params": {
      "type": "object",
      "required": [
        "name",
        "hosts"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterCreateParamsHostsItems0"
          },
          "x-go-custom-tag": "gorm:\"type:varchar(64)[]\""
        },
        "name": {
          "type": "string"
        }
      }
    },
    "cluster-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/cluster"
      }
    },
    "connectivity-check-host": {
      "type": "object",
      "properties": {
        "host-id": {
          "type": "string",
          "format": "uuid"
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectivity-check-nic"
          }
        }
      }
    },
    "connectivity-check-nic": {
      "type": "object",
      "properties": {
        "ip-addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mac": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "connectivity-check-params": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/connectivity-check-host"
      }
    },
    "connectivity-remote-host": {
      "type": "object",
      "properties": {
        "host-id": {
          "type": "string",
          "format": "uuid"
        },
        "l2-connectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/l2-connectivity"
          }
        },
        "l3-connectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/l3-connectivity"
          }
        }
      }
    },
    "connectivity-report": {
      "type": "object",
      "properties": {
        "remote-hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectivity-remote-host"
          }
        }
      }
    },
    "cpu": {
      "type": "object",
      "properties": {
        "architecture": {
          "type": "string"
        },
        "cpu-mhz": {
          "type": "number"
        },
        "cpus": {
          "type": "integer"
        },
        "model-name": {
          "type": "string"
        },
        "sockets": {
          "type": "integer"
        },
        "threads-per-core": {
          "type": "integer"
        }
      }
    },
    "debug-step": {
      "type": "object",
      "required": [
        "command"
      ],
      "properties": {
        "command": {
          "type": "string"
        }
      }
    },
    "host": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/base"
        },
        {
          "$ref": "#/definitions/host-create-params"
        },
        {
          "type": "object",
          "required": [
            "kind",
            "status",
            "status_info",
            "connectivity",
            "hardware_info"
          ],
          "properties": {
            "cluster_id": {
              "type": "string",
              "format": "uuid"
            },
            "connectivity": {
              "$ref": "#/definitions/connectivity-report"
            },
            "hardware_info": {
              "$ref": "#/definitions/introspection"
            },
            "role": {
              "type": "string",
              "enum": [
                "undefined",
                "master",
                "worker"
              ]
            },
            "status": {
              "type": "string",
              "enum": [
                "discovering",
                "known",
                "disconnected",
                "insufficient",
                "disabled",
                "installing",
                "installed"
              ]
            },
            "status_info": {
              "type": "string"
            }
          }
        }
      ]
    },
    "host-create-params": {
      "type": "object",
      "required": [
        "namespace",
        "host_id"
      ],
      "properties": {
        "host_id": {
          "type": "string",
          "format": "uuid"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "host-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/host"
      }
    },
    "image": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/base"
        },
        {
          "$ref": "#/definitions/image-create-params"
        },
        {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "download_url": {
              "type": "string",
              "format": "uri"
            },
            "status": {
              "type": "string",
              "enum": [
                "creating",
                "ready",
                "error"
              ]
            }
          }
        }
      ]
    },
    "image-create-params": {
      "type": "object",
      "required": [
        "name",
        "namespace"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "proxy_ip": {
          "type": "string",
          "format": "hostname"
        },
        "proxy_port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        }
      }
    },
    "image-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/image"
      }
    },
    "introspection": {
      "type": "object",
      "properties": {
        "block-devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/block-device"
          }
        },
        "cpu": {
          "$ref": "#/definitions/cpu"
        },
        "memory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/memory"
          }
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nic"
          }
        }
      }
    },
    "l2-connectivity": {
      "type": "object",
      "properties": {
        "outgoing-ip-address": {
          "type": "string"
        },
        "outgoing-nic": {
          "type": "string"
        },
        "remote-ip-address": {
          "type": "string"
        },
        "remote-mac": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        }
      }
    },
    "l3-connectivity": {
      "type": "object",
      "properties": {
        "outgoing-nic": {
          "type": "string"
        },
        "remote-ip-address": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        }
      }
    },
    "memory": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer"
        },
        "buff-cached": {
          "type": "integer"
        },
        "free": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "shared": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        },
        "used": {
          "type": "integer"
        }
      }
    },
    "nic": {
      "type": "object",
      "properties": {
        "cidrs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cidr"
          }
        },
        "mac": {
          "type": "string"
        },
        "mtu": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "step": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "json"
        },
        "step-type": {
          "$ref": "#/definitions/step-type"
        }
      }
    },
    "step-reply": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "exit-code": {
          "type": "integer"
        },
        "output": {
          "type": "string"
        },
        "step-type": {
          "$ref": "#/definitions/step-type"
        }
      }
    },
    "step-type": {
      "type": "string",
      "enum": [
        "hardaware-info",
        "connectivity-check",
        "debug"
      ]
    },
    "steps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/step"
      }
    },
    "steps-reply": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/step-reply"
      }
    }
  },
  "tags": [
    {
      "description": "Manage bare metal inventory",
      "name": "Bare metal inventory"
    }
  ]
}`))
}
