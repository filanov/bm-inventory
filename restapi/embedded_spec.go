// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Assisted installation",
    "title": "AssistedInstall",
    "version": "1.0.0"
  },
  "host": "api.openshift.com",
  "basePath": "/api/assisted-install/v1",
  "paths": {
    "/clusters": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the list of OpenShift bare metal clusters.",
        "operationId": "ListClusters",
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster-list"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Creates a new OpenShift bare metal cluster definition.",
        "operationId": "RegisterCluster",
        "parameters": [
          {
            "name": "new-cluster-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{clusterId}/hosts/{hostId}/progress": {
      "put": {
        "tags": [
          "installer"
        ],
        "summary": "Update installation progress",
        "operationId": "UpdateHostInstallProgress",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the cluster to retrieve",
            "name": "clusterId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to retrieve",
            "name": "hostId",
            "in": "path",
            "required": true
          },
          {
            "description": "New progress value",
            "name": "host-install-progress-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/host-install-progress-params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update install progress"
          }
        }
      }
    },
    "/clusters/{cluster_id}": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the details of the OpenShift bare metal cluster.",
        "operationId": "GetCluster",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "installer"
        ],
        "summary": "Deletes an OpenShift bare metal cluster definition.",
        "operationId": "DeregisterCluster",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "installer"
        ],
        "summary": "Updates an OpenShift bare metal cluster definition.",
        "operationId": "UpdateCluster",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "name": "cluster-update-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster-update-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/actions/install": {
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Installs the OpenShift bare metal cluster.",
        "operationId": "InstallCluster",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/downloads/files": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "installer"
        ],
        "summary": "Downloads files relating to the installed/installing cluster.",
        "operationId": "DownloadClusterFiles",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "bootstrap.ign",
              "master.ign",
              "metadata.json",
              "worker.ign",
              "kubeadmin-password",
              "kubeconfig"
            ],
            "type": "string",
            "name": "file_name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/downloads/image": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "installer"
        ],
        "summary": "Downloads the OpenShift per-cluster discovery ISO.",
        "operationId": "DownloadClusterISO",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "image_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Creates a new OpenShift per-cluster discovery ISO.",
        "operationId": "GenerateClusterISO",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "name": "image-create-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/image-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "type": "object",
              "properties": {
                "imageId": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the list of OpenShift bare metal hosts.",
        "operationId": "ListHosts",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/host-list"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Registers a new OpenShift bare metal host.",
        "operationId": "RegisterHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "name": "new-host-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/host-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/host"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts/{host_id}": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the details of the OpenShift bare metal host.",
        "operationId": "GetHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/host"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "installer"
        ],
        "summary": "Deregisters an OpenShift bare metal host.",
        "operationId": "DeregisterHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts/{host_id}/actions/debug": {
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Sets a single shot debug step that will be sent next time the host agent will ask for a command.",
        "operationId": "SetDebugStep",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          },
          {
            "name": "step",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/debug-step"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts/{host_id}/actions/enable": {
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Enables a host for inclusion in the cluster.",
        "operationId": "EnableHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "installer"
        ],
        "summary": "Disables a host for inclusion in the cluster.",
        "operationId": "DisableHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts/{host_id}/instructions": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the next operations that the host agent needs to perform.",
        "operationId": "GetNextSteps",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/steps"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Posts the result of the operations from the host agent.",
        "operationId": "PostStepReply",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          },
          {
            "name": "reply",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/step-reply"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "block-device": {
      "type": "object",
      "properties": {
        "device_type": {
          "type": "string"
        },
        "fstype": {
          "type": "string"
        },
        "major_device_number": {
          "type": "integer"
        },
        "minor_device_number": {
          "type": "integer"
        },
        "mountpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "read_only": {
          "type": "boolean"
        },
        "removable_device": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        }
      }
    },
    "cidr": {
      "type": "object",
      "properties": {
        "ip_address": {
          "type": "string"
        },
        "mask": {
          "type": "integer"
        }
      }
    },
    "cluster": {
      "type": "object",
      "required": [
        "kind",
        "id",
        "href",
        "status",
        "status_info"
      ],
      "properties": {
        "api_vip": {
          "description": "Virtual IP used to reach the OpenShift cluster API.",
          "type": "string",
          "format": "hostname"
        },
        "base_dns_domain": {
          "description": "Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.",
          "type": "string"
        },
        "cluster_network_cidr": {
          "description": "IP address block from which Pod IPs are allocated This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "cluster_network_host_prefix": {
          "description": "The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.",
          "type": "integer",
          "maximum": 32,
          "minimum": 1
        },
        "created_at": {
          "description": "The time that this cluster was created.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\""
        },
        "dns_vip": {
          "description": "Virtual IP used internally by the cluster for automating internal DNS requirements.",
          "type": "string",
          "format": "hostname"
        },
        "hosts": {
          "description": "Hosts that are associated with this cluster.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/host"
          },
          "x-go-custom-tag": "gorm:\"foreignkey:ClusterID;association_foreignkey:ID\""
        },
        "href": {
          "description": "Self link.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the object.",
          "type": "string",
          "format": "uuid",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "ingress_vip": {
          "description": "Virtual IP used for cluster ingress traffic.",
          "type": "string",
          "format": "hostname"
        },
        "install_completed_at": {
          "description": "The time that this cluster completed installation.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime;default:0\""
        },
        "install_started_at": {
          "description": "The time that this cluster began installation.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime;default:0\""
        },
        "kind": {
          "description": "Indicates the type of this object. Will be 'Cluster' if this is a complete object or 'ClusterLink' if it is just a link.",
          "type": "string",
          "enum": [
            "Cluster"
          ]
        },
        "name": {
          "description": "Name of the OpenShift cluster.",
          "type": "string"
        },
        "openshift_version": {
          "description": "Version of the OpenShift cluster.",
          "type": "string"
        },
        "pull_secret": {
          "description": "The pull secret that obtained from the Pull Secret page on the Red Hat OpenShift Cluster Manager site.",
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(4096)\""
        },
        "service_network_cidr": {
          "description": "The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "ssh_public_key": {
          "description": "SSH public key for debugging OpenShift nodes.",
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(1024)\""
        },
        "status": {
          "description": "Status of the OpenShift cluster.",
          "type": "string",
          "enum": [
            "insufficient",
            "ready",
            "error",
            "installing",
            "installed"
          ]
        },
        "status_info": {
          "description": "Additional information pertaining to the status of the OpenShift cluster.",
          "type": "string"
        },
        "updated_at": {
          "description": "The last time that this cluster was updated.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\""
        }
      }
    },
    "cluster-create-params": {
      "type": "object",
      "required": [
        "name",
        "openshift_version"
      ],
      "properties": {
        "api_vip": {
          "description": "Virtual IP used to reach the OpenShift cluster API.",
          "type": "string",
          "format": "hostname"
        },
        "base_dns_domain": {
          "description": "Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.",
          "type": "string"
        },
        "cluster_network_cidr": {
          "description": "IP address block from which Pod IPs are allocated This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "cluster_network_host_prefix": {
          "description": "The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.",
          "type": "integer",
          "maximum": 32,
          "minimum": 1
        },
        "dns_vip": {
          "description": "Virtual IP used internally by the cluster for automating internal DNS requirements.",
          "type": "string",
          "format": "hostname"
        },
        "ingress_vip": {
          "description": "Virtual IP used for cluster ingress traffic.",
          "type": "string",
          "format": "hostname"
        },
        "name": {
          "description": "Name of the OpenShift cluster.",
          "type": "string"
        },
        "openshift_version": {
          "description": "Version of the OpenShift cluster.",
          "type": "string"
        },
        "pull_secret": {
          "description": "The pull secret that obtained from the Pull Secret page on the Red Hat OpenShift Cluster Manager site.",
          "type": "string"
        },
        "service_network_cidr": {
          "description": "The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "ssh_public_key": {
          "description": "SSH public key for debugging OpenShift nodes.",
          "type": "string"
        }
      }
    },
    "cluster-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/cluster"
      }
    },
    "cluster-update-params": {
      "type": "object",
      "properties": {
        "api_vip": {
          "description": "Virtual IP used to reach the OpenShift cluster API.",
          "type": "string",
          "format": "hostname"
        },
        "base_dns_domain": {
          "description": "Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.",
          "type": "string"
        },
        "cluster_network_cidr": {
          "description": "IP address block from which Pod IPs are allocated This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "cluster_network_host_prefix": {
          "description": "The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.",
          "type": "integer",
          "maximum": 32,
          "minimum": 1
        },
        "dns_vip": {
          "description": "Virtual IP used internally by the cluster for automating internal DNS requirements.",
          "type": "string",
          "format": "hostname"
        },
        "hosts_roles": {
          "description": "The desired role for hosts associated with the cluster.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "role": {
                "type": "string",
                "enum": [
                  "master",
                  "worker"
                ]
              }
            }
          },
          "x-go-custom-tag": "gorm:\"type:varchar(64)[]\""
        },
        "ingress_vip": {
          "description": "Virtual IP used for cluster ingress traffic.",
          "type": "string",
          "format": "hostname"
        },
        "name": {
          "description": "OpenShift cluster name",
          "type": "string"
        },
        "pull_secret": {
          "description": "The pull secret that obtained from the Pull Secret page on the Red Hat OpenShift Cluster Manager site.",
          "type": "string"
        },
        "service_network_cidr": {
          "description": "The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "ssh_public_key": {
          "description": "SSH public key for debugging OpenShift nodes.",
          "type": "string"
        }
      }
    },
    "connectivity-check-host": {
      "type": "object",
      "properties": {
        "host_id": {
          "type": "string",
          "format": "uuid"
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectivity-check-nic"
          }
        }
      }
    },
    "connectivity-check-nic": {
      "type": "object",
      "properties": {
        "ip_addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mac": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "connectivity-check-params": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/connectivity-check-host"
      }
    },
    "connectivity-remote-host": {
      "type": "object",
      "properties": {
        "host_id": {
          "type": "string",
          "format": "uuid"
        },
        "l2_connectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/l2-connectivity"
          }
        },
        "l3_connectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/l3-connectivity"
          }
        }
      }
    },
    "connectivity-report": {
      "type": "object",
      "properties": {
        "remote_hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectivity-remote-host"
          }
        }
      }
    },
    "cpu": {
      "type": "object",
      "properties": {
        "architecture": {
          "type": "string"
        },
        "cpu_mhz": {
          "type": "number"
        },
        "cpus": {
          "type": "integer"
        },
        "model_name": {
          "type": "string"
        },
        "sockets": {
          "type": "integer"
        },
        "threads_per_core": {
          "type": "integer"
        }
      }
    },
    "debug-step": {
      "type": "object",
      "required": [
        "command"
      ],
      "properties": {
        "command": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "kind",
        "id",
        "href",
        "code",
        "reason"
      ],
      "properties": {
        "code": {
          "description": "Globally unique code of the error, composed of the unique identifier of the API and the numeric identifier of the error. For example, for if the numeric identifier of the error is 93 and the identifier of the API is assisted_install then the code will be ASSISTED-INSTALL-93.",
          "type": "string"
        },
        "href": {
          "description": "Self link.",
          "type": "string"
        },
        "id": {
          "description": "Numeric identifier of the error.",
          "type": "integer",
          "format": "int32",
          "maximum": 504,
          "minimum": 400
        },
        "kind": {
          "description": "Indicates the type of this object. Will always be 'Error'.",
          "type": "string",
          "enum": [
            "Error"
          ]
        },
        "reason": {
          "description": "Human readable description of the error.",
          "type": "string"
        }
      }
    },
    "host": {
      "type": "object",
      "required": [
        "kind",
        "id",
        "href",
        "status",
        "status_info"
      ],
      "properties": {
        "cluster_id": {
          "description": "The cluster that this host is associated with.",
          "type": "string",
          "format": "uuid",
          "x-go-custom-tag": "gorm:\"primary_key;foreignkey:Cluster\""
        },
        "connectivity": {
          "$ref": "#/definitions/connectivity-report"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\""
        },
        "hardware_info": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:text\""
        },
        "href": {
          "description": "Self link.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the object.",
          "type": "string",
          "format": "uuid",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "kind": {
          "description": "Indicates the type of this object. Will be 'Host' if this is a complete object or 'HostLink' if it is just a link.",
          "type": "string",
          "enum": [
            "Host"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "undefined",
            "master",
            "worker"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "discovering",
            "known",
            "disconnected",
            "insufficient",
            "disabled",
            "installing",
            "installed",
            "error"
          ]
        },
        "status_info": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\""
        }
      }
    },
    "host-create-params": {
      "type": "object",
      "required": [
        "host_id"
      ],
      "properties": {
        "host_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "host-install-progress-params": {
      "type": "string"
    },
    "host-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/host"
      }
    },
    "image-create-params": {
      "type": "object",
      "properties": {
        "proxy_url": {
          "description": "The URL of the HTTP/S proxy that agents should use to access the discovery service\nhttp://\\\u003cuser\\\u003e:\\\u003cpassword\\\u003e@\\\u003cserver\\\u003e:\\\u003cport\\\u003e/\n",
          "type": "string"
        },
        "ssh_public_key": {
          "description": "SSH public key for debugging the installation.",
          "type": "string"
        }
      }
    },
    "introspection": {
      "type": "object",
      "properties": {
        "block_devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/block-device"
          }
        },
        "cpu": {
          "$ref": "#/definitions/cpu"
        },
        "memory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/memory"
          }
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nic"
          }
        }
      }
    },
    "l2-connectivity": {
      "type": "object",
      "properties": {
        "outgoing_ip_address": {
          "type": "string"
        },
        "outgoing_nic": {
          "type": "string"
        },
        "remote_ip_address": {
          "type": "string"
        },
        "remote_mac": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        }
      }
    },
    "l3-connectivity": {
      "type": "object",
      "properties": {
        "outgoing_nic": {
          "type": "string"
        },
        "remote_ip_address": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        }
      }
    },
    "memory": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer"
        },
        "buff_cached": {
          "type": "integer"
        },
        "free": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "shared": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        },
        "used": {
          "type": "integer"
        }
      }
    },
    "nic": {
      "type": "object",
      "properties": {
        "cidrs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cidr"
          }
        },
        "mac": {
          "type": "string"
        },
        "mtu": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "step": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "string"
        },
        "step_id": {
          "type": "string"
        },
        "step_type": {
          "$ref": "#/definitions/step-type"
        }
      }
    },
    "step-reply": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "exit_code": {
          "type": "integer"
        },
        "output": {
          "type": "string"
        },
        "step_id": {
          "type": "string"
        }
      }
    },
    "step-type": {
      "type": "string",
      "enum": [
        "hardware-info",
        "connectivity-check",
        "execute"
      ]
    },
    "steps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/step"
      }
    },
    "steps-reply": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/step-reply"
      }
    }
  },
  "tags": [
    {
      "description": "Assisted bare metal installation",
      "name": "Assisted installation"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Assisted installation",
    "title": "AssistedInstall",
    "version": "1.0.0"
  },
  "host": "api.openshift.com",
  "basePath": "/api/assisted-install/v1",
  "paths": {
    "/clusters": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the list of OpenShift bare metal clusters.",
        "operationId": "ListClusters",
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster-list"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Creates a new OpenShift bare metal cluster definition.",
        "operationId": "RegisterCluster",
        "parameters": [
          {
            "name": "new-cluster-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{clusterId}/hosts/{hostId}/progress": {
      "put": {
        "tags": [
          "installer"
        ],
        "summary": "Update installation progress",
        "operationId": "UpdateHostInstallProgress",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the cluster to retrieve",
            "name": "clusterId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the host to retrieve",
            "name": "hostId",
            "in": "path",
            "required": true
          },
          {
            "description": "New progress value",
            "name": "host-install-progress-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/host-install-progress-params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update install progress"
          }
        }
      }
    },
    "/clusters/{cluster_id}": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the details of the OpenShift bare metal cluster.",
        "operationId": "GetCluster",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "installer"
        ],
        "summary": "Deletes an OpenShift bare metal cluster definition.",
        "operationId": "DeregisterCluster",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "installer"
        ],
        "summary": "Updates an OpenShift bare metal cluster definition.",
        "operationId": "UpdateCluster",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "name": "cluster-update-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster-update-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/actions/install": {
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Installs the OpenShift bare metal cluster.",
        "operationId": "InstallCluster",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/downloads/files": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "installer"
        ],
        "summary": "Downloads files relating to the installed/installing cluster.",
        "operationId": "DownloadClusterFiles",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "bootstrap.ign",
              "master.ign",
              "metadata.json",
              "worker.ign",
              "kubeadmin-password",
              "kubeconfig"
            ],
            "type": "string",
            "name": "file_name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/downloads/image": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "installer"
        ],
        "summary": "Downloads the OpenShift per-cluster discovery ISO.",
        "operationId": "DownloadClusterISO",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "image_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Creates a new OpenShift per-cluster discovery ISO.",
        "operationId": "GenerateClusterISO",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "name": "image-create-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/image-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "type": "object",
              "properties": {
                "imageId": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the list of OpenShift bare metal hosts.",
        "operationId": "ListHosts",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/host-list"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Registers a new OpenShift bare metal host.",
        "operationId": "RegisterHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "name": "new-host-params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/host-create-params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/host"
            }
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts/{host_id}": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the details of the OpenShift bare metal host.",
        "operationId": "GetHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/host"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "installer"
        ],
        "summary": "Deregisters an OpenShift bare metal host.",
        "operationId": "DeregisterHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts/{host_id}/actions/debug": {
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Sets a single shot debug step that will be sent next time the host agent will ask for a command.",
        "operationId": "SetDebugStep",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          },
          {
            "name": "step",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/debug-step"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts/{host_id}/actions/enable": {
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Enables a host for inclusion in the cluster.",
        "operationId": "EnableHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "installer"
        ],
        "summary": "Disables a host for inclusion in the cluster.",
        "operationId": "DisableHost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/clusters/{cluster_id}/hosts/{host_id}/instructions": {
      "get": {
        "tags": [
          "installer"
        ],
        "summary": "Retrieves the next operations that the host agent needs to perform.",
        "operationId": "GetNextSteps",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/steps"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "installer"
        ],
        "summary": "Posts the result of the operations from the host agent.",
        "operationId": "PostStepReply",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "host_id",
            "in": "path",
            "required": true
          },
          {
            "name": "reply",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/step-reply"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ClusterUpdateParamsHostsRolesItems0": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "role": {
          "type": "string",
          "enum": [
            "master",
            "worker"
          ]
        }
      }
    },
    "block-device": {
      "type": "object",
      "properties": {
        "device_type": {
          "type": "string"
        },
        "fstype": {
          "type": "string"
        },
        "major_device_number": {
          "type": "integer"
        },
        "minor_device_number": {
          "type": "integer"
        },
        "mountpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "read_only": {
          "type": "boolean"
        },
        "removable_device": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        }
      }
    },
    "cidr": {
      "type": "object",
      "properties": {
        "ip_address": {
          "type": "string"
        },
        "mask": {
          "type": "integer"
        }
      }
    },
    "cluster": {
      "type": "object",
      "required": [
        "kind",
        "id",
        "href",
        "status",
        "status_info"
      ],
      "properties": {
        "api_vip": {
          "description": "Virtual IP used to reach the OpenShift cluster API.",
          "type": "string",
          "format": "hostname"
        },
        "base_dns_domain": {
          "description": "Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.",
          "type": "string"
        },
        "cluster_network_cidr": {
          "description": "IP address block from which Pod IPs are allocated This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "cluster_network_host_prefix": {
          "description": "The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.",
          "type": "integer",
          "maximum": 32,
          "minimum": 1
        },
        "created_at": {
          "description": "The time that this cluster was created.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\""
        },
        "dns_vip": {
          "description": "Virtual IP used internally by the cluster for automating internal DNS requirements.",
          "type": "string",
          "format": "hostname"
        },
        "hosts": {
          "description": "Hosts that are associated with this cluster.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/host"
          },
          "x-go-custom-tag": "gorm:\"foreignkey:ClusterID;association_foreignkey:ID\""
        },
        "href": {
          "description": "Self link.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the object.",
          "type": "string",
          "format": "uuid",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "ingress_vip": {
          "description": "Virtual IP used for cluster ingress traffic.",
          "type": "string",
          "format": "hostname"
        },
        "install_completed_at": {
          "description": "The time that this cluster completed installation.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime;default:0\""
        },
        "install_started_at": {
          "description": "The time that this cluster began installation.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime;default:0\""
        },
        "kind": {
          "description": "Indicates the type of this object. Will be 'Cluster' if this is a complete object or 'ClusterLink' if it is just a link.",
          "type": "string",
          "enum": [
            "Cluster"
          ]
        },
        "name": {
          "description": "Name of the OpenShift cluster.",
          "type": "string"
        },
        "openshift_version": {
          "description": "Version of the OpenShift cluster.",
          "type": "string"
        },
        "pull_secret": {
          "description": "The pull secret that obtained from the Pull Secret page on the Red Hat OpenShift Cluster Manager site.",
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(4096)\""
        },
        "service_network_cidr": {
          "description": "The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "ssh_public_key": {
          "description": "SSH public key for debugging OpenShift nodes.",
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(1024)\""
        },
        "status": {
          "description": "Status of the OpenShift cluster.",
          "type": "string",
          "enum": [
            "insufficient",
            "ready",
            "error",
            "installing",
            "installed"
          ]
        },
        "status_info": {
          "description": "Additional information pertaining to the status of the OpenShift cluster.",
          "type": "string"
        },
        "updated_at": {
          "description": "The last time that this cluster was updated.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\""
        }
      }
    },
    "cluster-create-params": {
      "type": "object",
      "required": [
        "name",
        "openshift_version"
      ],
      "properties": {
        "api_vip": {
          "description": "Virtual IP used to reach the OpenShift cluster API.",
          "type": "string",
          "format": "hostname"
        },
        "base_dns_domain": {
          "description": "Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.",
          "type": "string"
        },
        "cluster_network_cidr": {
          "description": "IP address block from which Pod IPs are allocated This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "cluster_network_host_prefix": {
          "description": "The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.",
          "type": "integer",
          "maximum": 32,
          "minimum": 1
        },
        "dns_vip": {
          "description": "Virtual IP used internally by the cluster for automating internal DNS requirements.",
          "type": "string",
          "format": "hostname"
        },
        "ingress_vip": {
          "description": "Virtual IP used for cluster ingress traffic.",
          "type": "string",
          "format": "hostname"
        },
        "name": {
          "description": "Name of the OpenShift cluster.",
          "type": "string"
        },
        "openshift_version": {
          "description": "Version of the OpenShift cluster.",
          "type": "string"
        },
        "pull_secret": {
          "description": "The pull secret that obtained from the Pull Secret page on the Red Hat OpenShift Cluster Manager site.",
          "type": "string"
        },
        "service_network_cidr": {
          "description": "The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "ssh_public_key": {
          "description": "SSH public key for debugging OpenShift nodes.",
          "type": "string"
        }
      }
    },
    "cluster-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/cluster"
      }
    },
    "cluster-update-params": {
      "type": "object",
      "properties": {
        "api_vip": {
          "description": "Virtual IP used to reach the OpenShift cluster API.",
          "type": "string",
          "format": "hostname"
        },
        "base_dns_domain": {
          "description": "Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.",
          "type": "string"
        },
        "cluster_network_cidr": {
          "description": "IP address block from which Pod IPs are allocated This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "cluster_network_host_prefix": {
          "description": "The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.",
          "type": "integer",
          "maximum": 32,
          "minimum": 1
        },
        "dns_vip": {
          "description": "Virtual IP used internally by the cluster for automating internal DNS requirements.",
          "type": "string",
          "format": "hostname"
        },
        "hosts_roles": {
          "description": "The desired role for hosts associated with the cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterUpdateParamsHostsRolesItems0"
          },
          "x-go-custom-tag": "gorm:\"type:varchar(64)[]\""
        },
        "ingress_vip": {
          "description": "Virtual IP used for cluster ingress traffic.",
          "type": "string",
          "format": "hostname"
        },
        "name": {
          "description": "OpenShift cluster name",
          "type": "string"
        },
        "pull_secret": {
          "description": "The pull secret that obtained from the Pull Secret page on the Red Hat OpenShift Cluster Manager site.",
          "type": "string"
        },
        "service_network_cidr": {
          "description": "The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.",
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/[0-9]|[1-2][0-9]|3[0-2]?$"
        },
        "ssh_public_key": {
          "description": "SSH public key for debugging OpenShift nodes.",
          "type": "string"
        }
      }
    },
    "connectivity-check-host": {
      "type": "object",
      "properties": {
        "host_id": {
          "type": "string",
          "format": "uuid"
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectivity-check-nic"
          }
        }
      }
    },
    "connectivity-check-nic": {
      "type": "object",
      "properties": {
        "ip_addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mac": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "connectivity-check-params": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/connectivity-check-host"
      }
    },
    "connectivity-remote-host": {
      "type": "object",
      "properties": {
        "host_id": {
          "type": "string",
          "format": "uuid"
        },
        "l2_connectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/l2-connectivity"
          }
        },
        "l3_connectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/l3-connectivity"
          }
        }
      }
    },
    "connectivity-report": {
      "type": "object",
      "properties": {
        "remote_hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectivity-remote-host"
          }
        }
      }
    },
    "cpu": {
      "type": "object",
      "properties": {
        "architecture": {
          "type": "string"
        },
        "cpu_mhz": {
          "type": "number"
        },
        "cpus": {
          "type": "integer"
        },
        "model_name": {
          "type": "string"
        },
        "sockets": {
          "type": "integer"
        },
        "threads_per_core": {
          "type": "integer"
        }
      }
    },
    "debug-step": {
      "type": "object",
      "required": [
        "command"
      ],
      "properties": {
        "command": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "kind",
        "id",
        "href",
        "code",
        "reason"
      ],
      "properties": {
        "code": {
          "description": "Globally unique code of the error, composed of the unique identifier of the API and the numeric identifier of the error. For example, for if the numeric identifier of the error is 93 and the identifier of the API is assisted_install then the code will be ASSISTED-INSTALL-93.",
          "type": "string"
        },
        "href": {
          "description": "Self link.",
          "type": "string"
        },
        "id": {
          "description": "Numeric identifier of the error.",
          "type": "integer",
          "format": "int32",
          "maximum": 504,
          "minimum": 400
        },
        "kind": {
          "description": "Indicates the type of this object. Will always be 'Error'.",
          "type": "string",
          "enum": [
            "Error"
          ]
        },
        "reason": {
          "description": "Human readable description of the error.",
          "type": "string"
        }
      }
    },
    "host": {
      "type": "object",
      "required": [
        "kind",
        "id",
        "href",
        "status",
        "status_info"
      ],
      "properties": {
        "cluster_id": {
          "description": "The cluster that this host is associated with.",
          "type": "string",
          "format": "uuid",
          "x-go-custom-tag": "gorm:\"primary_key;foreignkey:Cluster\""
        },
        "connectivity": {
          "$ref": "#/definitions/connectivity-report"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\""
        },
        "hardware_info": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:text\""
        },
        "href": {
          "description": "Self link.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the object.",
          "type": "string",
          "format": "uuid",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "kind": {
          "description": "Indicates the type of this object. Will be 'Host' if this is a complete object or 'HostLink' if it is just a link.",
          "type": "string",
          "enum": [
            "Host"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "undefined",
            "master",
            "worker"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "discovering",
            "known",
            "disconnected",
            "insufficient",
            "disabled",
            "installing",
            "installed",
            "error"
          ]
        },
        "status_info": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\""
        }
      }
    },
    "host-create-params": {
      "type": "object",
      "required": [
        "host_id"
      ],
      "properties": {
        "host_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "host-install-progress-params": {
      "type": "string"
    },
    "host-list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/host"
      }
    },
    "image-create-params": {
      "type": "object",
      "properties": {
        "proxy_url": {
          "description": "The URL of the HTTP/S proxy that agents should use to access the discovery service\nhttp://\\\u003cuser\\\u003e:\\\u003cpassword\\\u003e@\\\u003cserver\\\u003e:\\\u003cport\\\u003e/\n",
          "type": "string"
        },
        "ssh_public_key": {
          "description": "SSH public key for debugging the installation.",
          "type": "string"
        }
      }
    },
    "introspection": {
      "type": "object",
      "properties": {
        "block_devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/block-device"
          }
        },
        "cpu": {
          "$ref": "#/definitions/cpu"
        },
        "memory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/memory"
          }
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nic"
          }
        }
      }
    },
    "l2-connectivity": {
      "type": "object",
      "properties": {
        "outgoing_ip_address": {
          "type": "string"
        },
        "outgoing_nic": {
          "type": "string"
        },
        "remote_ip_address": {
          "type": "string"
        },
        "remote_mac": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        }
      }
    },
    "l3-connectivity": {
      "type": "object",
      "properties": {
        "outgoing_nic": {
          "type": "string"
        },
        "remote_ip_address": {
          "type": "string"
        },
        "successful": {
          "type": "boolean"
        }
      }
    },
    "memory": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer"
        },
        "buff_cached": {
          "type": "integer"
        },
        "free": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "shared": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        },
        "used": {
          "type": "integer"
        }
      }
    },
    "nic": {
      "type": "object",
      "properties": {
        "cidrs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cidr"
          }
        },
        "mac": {
          "type": "string"
        },
        "mtu": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "step": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "string"
        },
        "step_id": {
          "type": "string"
        },
        "step_type": {
          "$ref": "#/definitions/step-type"
        }
      }
    },
    "step-reply": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "exit_code": {
          "type": "integer"
        },
        "output": {
          "type": "string"
        },
        "step_id": {
          "type": "string"
        }
      }
    },
    "step-type": {
      "type": "string",
      "enum": [
        "hardware-info",
        "connectivity-check",
        "execute"
      ]
    },
    "steps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/step"
      }
    },
    "steps-reply": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/step-reply"
      }
    }
  },
  "tags": [
    {
      "description": "Assisted bare metal installation",
      "name": "Assisted installation"
    }
  ]
}`))
}
