// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DisableHostReader is a Reader for the DisableHost structure.
type DisableHostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisableHostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDisableHostNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDisableHostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDisableHostConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDisableHostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDisableHostNoContent creates a DisableHostNoContent with default headers values
func NewDisableHostNoContent() *DisableHostNoContent {
	return &DisableHostNoContent{}
}

/*DisableHostNoContent handles this case with default header values.

Disabled
*/
type DisableHostNoContent struct {
}

func (o *DisableHostNoContent) Error() string {
	return fmt.Sprintf("[DELETE /hosts/{host_id}/actions/enable][%d] disableHostNoContent ", 204)
}

func (o *DisableHostNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDisableHostNotFound creates a DisableHostNotFound with default headers values
func NewDisableHostNotFound() *DisableHostNotFound {
	return &DisableHostNotFound{}
}

/*DisableHostNotFound handles this case with default header values.

Host not found
*/
type DisableHostNotFound struct {
}

func (o *DisableHostNotFound) Error() string {
	return fmt.Sprintf("[DELETE /hosts/{host_id}/actions/enable][%d] disableHostNotFound ", 404)
}

func (o *DisableHostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDisableHostConflict creates a DisableHostConflict with default headers values
func NewDisableHostConflict() *DisableHostConflict {
	return &DisableHostConflict{}
}

/*DisableHostConflict handles this case with default header values.

Conflict
*/
type DisableHostConflict struct {
}

func (o *DisableHostConflict) Error() string {
	return fmt.Sprintf("[DELETE /hosts/{host_id}/actions/enable][%d] disableHostConflict ", 409)
}

func (o *DisableHostConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDisableHostInternalServerError creates a DisableHostInternalServerError with default headers values
func NewDisableHostInternalServerError() *DisableHostInternalServerError {
	return &DisableHostInternalServerError{}
}

/*DisableHostInternalServerError handles this case with default header values.

Internal server error
*/
type DisableHostInternalServerError struct {
}

func (o *DisableHostInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /hosts/{host_id}/actions/enable][%d] disableHostInternalServerError ", 500)
}

func (o *DisableHostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
