// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/filanov/bm-inventory/models"
)

// RegisterInstalledClusterReader is a Reader for the RegisterInstalledCluster structure.
type RegisterInstalledClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterInstalledClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewRegisterInstalledClusterCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegisterInstalledClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegisterInstalledClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRegisterInstalledClusterCreated creates a RegisterInstalledClusterCreated with default headers values
func NewRegisterInstalledClusterCreated() *RegisterInstalledClusterCreated {
	return &RegisterInstalledClusterCreated{}
}

/*RegisterInstalledClusterCreated handles this case with default header values.

Success.
*/
type RegisterInstalledClusterCreated struct {
	Payload *models.Cluster
}

func (o *RegisterInstalledClusterCreated) Error() string {
	return fmt.Sprintf("[POST /installed_clusters][%d] registerInstalledClusterCreated  %+v", 201, o.Payload)
}

func (o *RegisterInstalledClusterCreated) GetPayload() *models.Cluster {
	return o.Payload
}

func (o *RegisterInstalledClusterCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Cluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterInstalledClusterBadRequest creates a RegisterInstalledClusterBadRequest with default headers values
func NewRegisterInstalledClusterBadRequest() *RegisterInstalledClusterBadRequest {
	return &RegisterInstalledClusterBadRequest{}
}

/*RegisterInstalledClusterBadRequest handles this case with default header values.

Error.
*/
type RegisterInstalledClusterBadRequest struct {
	Payload *models.Error
}

func (o *RegisterInstalledClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /installed_clusters][%d] registerInstalledClusterBadRequest  %+v", 400, o.Payload)
}

func (o *RegisterInstalledClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterInstalledClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterInstalledClusterInternalServerError creates a RegisterInstalledClusterInternalServerError with default headers values
func NewRegisterInstalledClusterInternalServerError() *RegisterInstalledClusterInternalServerError {
	return &RegisterInstalledClusterInternalServerError{}
}

/*RegisterInstalledClusterInternalServerError handles this case with default header values.

Error.
*/
type RegisterInstalledClusterInternalServerError struct {
	Payload *models.Error
}

func (o *RegisterInstalledClusterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /installed_clusters][%d] registerInstalledClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *RegisterInstalledClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterInstalledClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
