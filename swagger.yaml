swagger: '2.0'
info:
  description: 'Assisted installation'
  version: 1.0.0
  title: AssistedInstall
host: api.openshift.com
basePath: /api/assisted-install/v1
tags:
  - name: Assisted installation
    description: Assisted bare metal installation

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json


paths:
  /clusters:
    post:
      tags:
        - installer
      summary: Creates a new OpenShift bare metal cluster definition.
      operationId: RegisterCluster
      parameters:
        - in: body
          name: new-cluster-params
          required: true
          schema:
            $ref: '#/definitions/cluster-create-params'
      responses:
        201:
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

    get:
      tags:
        - installer
      summary: Retrieves the list of OpenShift bare metal clusters.
      operationId: ListClusters
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/cluster-list'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}:
    get:
      tags:
        - installer
      summary: Retrieves the details of the OpenShift bare metal cluster.
      operationId: GetCluster
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

    patch:
      tags:
        - installer
      summary: Updates an OpenShift bare metal cluster definition.
      operationId: UpdateCluster
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: body
          name: cluster-update-params
          required: true
          schema:
            $ref: '#/definitions/cluster-update-params'
      responses:
        201:
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        409:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

    delete:
      tags:
        - installer
      summary: Deletes an OpenShift bare metal cluster definition.
      operationId: DeregisterCluster
      parameters:
        - in: path
          name: cluster_id
          format: uuid
          type: string
          required: true
      responses:
        204:
          description: Success.
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        409:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/downloads/image:
    post:
      tags:
        - installer
      summary: Creates a new OpenShift per-cluster discovery ISO.
      operationId: GenerateClusterISO
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: body
          name: image-create-params
          required: true
          schema:
            $ref: '#/definitions/image-create-params'
      responses:
        201:
          description: Success.
          schema:
            type: object
            properties:
              imageId:
                type: string
                format: uuid
        400:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

    get:
      tags:
        - installer
      summary: Downloads the OpenShift per-cluster discovery ISO.
      operationId: DownloadClusterISO
      produces:
        # application/vnd.efi.iso is not supported
        - application/octet-stream
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: query
          name: image_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: Success.
          schema:
            type: string
            format: binary
        400:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/downloads/files:
    get:
      tags:
        - installer
      summary: Downloads files relating to the installed/installing cluster.
      operationId: DownloadClusterFiles
      produces:
        - application/octet-stream
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: query
          name: file_name
          type: string
          enum: [bootstrap.ign, master.ign, metadata.json, worker.ign, kubeadmin-password, kubeconfig]
          required: true
      responses:
        200:
          description: Success.
          schema:
            type: file
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        409:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/actions/install:
    post:
      tags:
        - installer
      summary: Installs the OpenShift bare metal cluster.
      operationId: InstallCluster
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        409:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts:
    post:
      tags:
        - installer
      summary: Registers a new OpenShift bare metal host.
      operationId: RegisterHost
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: body
          name: new-host-params
          required: true
          schema:
            $ref: '#/definitions/host-create-params'
      responses:
        201:
          description: Success.
          schema:
            $ref: '#/definitions/host'
        400:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

    get:
      tags:
        - installer
      summary: Retrieves the list of OpenShift bare metal hosts.
      operationId: ListHosts
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/host-list'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}:
    get:
      tags:
        - installer
      summary: Retrieves the details of the OpenShift bare metal host.
      operationId: GetHost
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/host'
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

    delete:
      tags:
        - installer
      summary: Deregisters an OpenShift bare metal host.
      operationId: DeregisterHost
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Success.
        400:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{clusterId}/hosts/{hostId}/progress:
    put:
      tags:
        - installer
      summary: Update installation progress
      operationId: UpdateHostInstallProgress
      parameters:
        - in: path
          name: clusterId
          description: The ID of the cluster to retrieve
          type: string
          format: uuid
          required: true
        - in: path
          name: hostId
          description: The ID of the host to retrieve
          type: string
          format: uuid
          required: true
        - in: body
          name: host-install-progress-params
          description: New progress value
          required: true
          schema:
            $ref: '#/definitions/host-install-progress-params'
      responses:
        200:
          description: Update install progress

  /clusters/{cluster_id}/hosts/{host_id}/actions/debug:
    post:
      tags:
        - installer
      summary: Sets a single shot debug step that will be sent next time the host agent will ask for a command.
      operationId: SetDebugStep
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          type: string
          format: uuid
          required: true
        - in: body
          name: step
          required: true
          schema:
            $ref: '#/definitions/debug-step'
      responses:
        204:
          description: Success.
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/actions/enable:
    post:
      tags:
        - installer
      summary: Enables a host for inclusion in the cluster.
      operationId: EnableHost
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Success.
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        409:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

    delete:
      tags:
        - installer
      summary: Disables a host for inclusion in the cluster.
      operationId: DisableHost
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Success.
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        409:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/instructions:
    get:
      tags:
        - installer
      summary: Retrieves the next operations that the host agent needs to perform.
      operationId: GetNextSteps
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/steps'
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'

    post:
      tags:
        - installer
      summary: Posts the result of the operations from the host agent.
      operationId: PostStepReply
      parameters:
        - in: path
          name: cluster_id
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          type: string
          format: uuid
          required: true
        - name: reply
          in: body
          schema:
            $ref: '#/definitions/step-reply'
      responses:
        204:
          description: Success.
        400:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        404:
          description: Error.
          schema:
            $ref: '#/definitions/error'
        500:
          description: Error.
          schema:
            $ref: '#/definitions/error'


definitions:
  image-create-params:
    type: object
    properties:
      proxy_url:
        type: string
        description: |
          The URL of the HTTP/S proxy that agents should use to access the discovery service
          http://\<user\>:\<password\>@\<server\>:\<port\>/
      ssh_public_key:
        type: string
        description: SSH public key for debugging the installation.

  host-create-params:
    type: object
    required:
      - host_id
    properties:
      host_id:
        type: string
        format: uuid

  host:
    type: object
    required:
      - kind
      - id
      - href
      - status
      - status_info
    properties:
      kind:
        type: string
        enum: ['Host']
        description: Indicates the type of this object. Will be 'Host' if this is a complete object or 'HostLink' if it is just a link.
      id:
        type: string
        format: uuid
        description: Unique identifier of the object.
        x-go-custom-tag: gorm:"primary_key"
      href:
        type: string
        description: Self link.
      cluster_id:
        type: string
        format: uuid
        x-go-custom-tag: gorm:"primary_key;foreignkey:Cluster"
        description: The cluster that this host is associated with.
      status:
        type: string
        enum:
          - discovering
          - known
          - disconnected
          - insufficient
          - disabled
          - installing
          - installed
          - error
      status_info:
        type: string
      connectivity:
        $ref: '#/definitions/connectivity-report'
      hardware_info:
        x-go-custom-tag: gorm:"type:text"
        type: string
      role:
        type: string
        enum: ['undefined', 'master', 'worker']
      updated_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:datetime"
      created_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:datetime"

  steps:
    type: array
    items:
      $ref: '#/definitions/step'

  step-type:
    type: string
    enum:
      - hardware-info
      - connectivity-check
      - execute
      - inventory

  step:
    type: object
    properties:
      step_type:
        $ref: '#/definitions/step-type'
      step_id:
        type: string
      command:
        type: string
      args:
        type: array
        items:
          type: string

  steps-reply:
    type: array
    items:
      $ref: '#/definitions/step-reply'

  step-reply:
    type: object
    properties:
      step_id:
        type: string
      exit_code:
        type: integer
      output:
        type: string
      error:
        type: string

  connectivity-check-nic:
    type: object
    properties:
      name:
        type: string
      mac:
        type: string
      ip_addresses:
        type: array
        items:
          type: string

  connectivity-check-host:
    type: object
    properties:
      host_id:
        type: string
        format: uuid
      nics:
        type: array
        items:
          $ref: '#/definitions/connectivity-check-nic'

  connectivity-check-params:
    type: array
    items:
      $ref: '#/definitions/connectivity-check-host'

  host-list:
    type: array
    items:
      $ref: '#/definitions/host'

  cluster-create-params:
    type: object
    required:
      - name
      - openshift_version
    properties:
      name:
        type: string
        description: Name of the OpenShift cluster.
      openshift_version:
        type: string
        description: Version of the OpenShift cluster.
      base_dns_domain:
        type: string
        description: Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.
      cluster_network_cidr:
        type: string
        description: IP address block from which Pod IPs are allocated This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]|[1-2][0-9]|3[0-2]?$'
      cluster_network_host_prefix:
        type: integer
        description: The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.
        minimum: 1
        maximum: 32
      service_network_cidr:
        type: string
        description: The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]|[1-2][0-9]|3[0-2]?$'
      api_vip:
        type: string
        format: hostname
        description: Virtual IP used to reach the OpenShift cluster API.
      dns_vip:
        type: string
        format: hostname
        description: Virtual IP used internally by the cluster for automating internal DNS requirements.
      ingress_vip:
        type: string
        format: hostname
        description: Virtual IP used for cluster ingress traffic.
      pull_secret:
        type: string
        description: The pull secret that obtained from the Pull Secret page on the Red Hat OpenShift Cluster Manager site.
      ssh_public_key:
        type: string
        description: SSH public key for debugging OpenShift nodes.

  cluster-update-params:
    type: object
    properties:
      name:
        type: string
        description: OpenShift cluster name
      base_dns_domain:
        type: string
        description: Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.
      cluster_network_cidr:
        type: string
        description: IP address block from which Pod IPs are allocated This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]|[1-2][0-9]|3[0-2]?$'
      cluster_network_host_prefix:
        type: integer
        description: The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.
        minimum: 1
        maximum: 32
      service_network_cidr:
        type: string
        description: The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]|[1-2][0-9]|3[0-2]?$'
      api_vip:
        type: string
        format: hostname
        description: Virtual IP used to reach the OpenShift cluster API.
      dns_vip:
        type: string
        format: hostname
        description: Virtual IP used internally by the cluster for automating internal DNS requirements.
      ingress_vip:
        type: string
        format: hostname
        description: Virtual IP used for cluster ingress traffic.
      pull_secret:
        type: string
        description: The pull secret that obtained from the Pull Secret page on the Red Hat OpenShift Cluster Manager site.
      ssh_public_key:
        type: string
        description: SSH public key for debugging OpenShift nodes.
      hosts_roles:
        type: array
        x-go-custom-tag: gorm:"type:varchar(64)[]"
        description: The desired role for hosts associated with the cluster.
        items:
          type: object
          properties:
            id:
              type: string
              format: uuid
            role:
              type: string
              enum: ['master', 'worker']

  cluster:
    type: object
    required:
      - kind
      - id
      - href
      - status
      - status_info
    properties:
      kind:
        type: string
        enum: ['Cluster']
        description: Indicates the type of this object. Will be 'Cluster' if this is a complete object or 'ClusterLink' if it is just a link.
      id:
        type: string
        format: uuid
        description: Unique identifier of the object.
        x-go-custom-tag: gorm:"primary_key"
      href:
        type: string
        description: Self link.
      name:
        type: string
        description: Name of the OpenShift cluster.
      openshift_version:
        type: string
        description: Version of the OpenShift cluster.
      base_dns_domain:
        type: string
        description: Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.
      cluster_network_cidr:
        type: string
        description: IP address block from which Pod IPs are allocated This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]|[1-2][0-9]|3[0-2]?$'
      cluster_network_host_prefix:
        type: integer
        description: The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.
        minimum: 1
        maximum: 32
      service_network_cidr:
        type: string
        description: The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]|[1-2][0-9]|3[0-2]?$'
      api_vip:
        type: string
        format: hostname
        description: Virtual IP used to reach the OpenShift cluster API.
      dns_vip:
        type: string
        format: hostname
        description: Virtual IP used internally by the cluster for automating internal DNS requirements.
      ingress_vip:
        type: string
        format: hostname
        description: Virtual IP used for cluster ingress traffic.
      pull_secret:
        type: string
        x-go-custom-tag: gorm:"type:varchar(4096)"
        description: The pull secret that obtained from the Pull Secret page on the Red Hat OpenShift Cluster Manager site.
      ssh_public_key:
        type: string
        x-go-custom-tag: gorm:"type:varchar(1024)"
        description: SSH public key for debugging OpenShift nodes.
      status:
        type: string
        description: Status of the OpenShift cluster.
        enum:
          - insufficient
          - ready
          - error
          - installing
          - installed
      status_info:
        type: string
        description: Additional information pertaining to the status of the OpenShift cluster.
      hosts:
        x-go-custom-tag: gorm:"foreignkey:ClusterID;association_foreignkey:ID"
        type: array
        description: Hosts that are associated with this cluster.
        items:
          type: object
          $ref: '#/definitions/host'
      updated_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:datetime"
        description: The last time that this cluster was updated.
      created_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:datetime"
        description: The time that this cluster was created.
      install_started_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:datetime;default:0"
        description: The time that this cluster began installation.
      install_completed_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:datetime;default:0"
        description: The time that this cluster completed installation.

  cluster-list:
    type: array
    items:
      $ref: '#/definitions/cluster'

  debug-step:
    type: object
    required:
      - command
    properties:
      command:
        type: string

  cpu_details:
    type: object
    properties:
      architecture:
        type: string
      model_name:
        type: string
      cpus:
        type: integer
      threads_per_core:
        type: integer
      sockets:
        type: integer
      cpu_mhz:
        type: number

  block-device:
    type: object
    properties:
      name:
        type: string
      major_device_number:
        type: integer
      minor_device_number:
        type: integer
      removable_device:
        type: integer
      size:
        type: integer
      read_only:
        type: boolean
      device_type:
        type: string
      mountpoint:
        type: string
      fstype:
        type: string

  memory_details:
    type: object
    properties:
      name:
        type: string
      total:
        type: integer
      used:
        type: integer
      free:
        type: integer
      shared:
        type: integer
      buff_cached:
        type: integer
      available:
        type: integer

  cidr:
    type: object
    properties:
      ip_address:
        type: string
      mask:
        type: integer

  nic:
    type: object
    properties:
      name:
        type: string
      state:
        type: string
      mtu:
        type: integer
      mac:
        type: string
      cidrs:
        type: array
        items:
          $ref: '#/definitions/cidr'


  # Return value of hardware info
  introspection:
    type: object
    properties:
      cpu:
        $ref: '#/definitions/cpu_details'
      block-devices:
        type: array
        items:
          $ref: '#/definitions/block-device'
      memory:
        type: array
        items:
          $ref: '#/definitions/memory_details'
      nics:
        type: array
        items:
          $ref: '#/definitions/nic'

  l2-connectivity:
    type: object
    properties:
      outgoing_nic:
        type: string
      outgoing_ip_address:
        type: string
      remote_ip_address:
        type: string
      remote_mac:
        type: string
      successful:
        type: boolean

  l3-connectivity:
    type: object
    properties:
      outgoing_nic:
        type: string
      remote_ip_address:
        type: string
      successful:
        type: boolean

  connectivity-remote-host:
    type: object
    properties:
      host_id:
        type: string
        format: uuid
      l2_connectivity:
        type: array
        items:
          $ref: '#/definitions/l2-connectivity'
      l3_connectivity:
        type: array
        items:
          $ref: '#/definitions/l3-connectivity'

  # Return value of connectivity check
  connectivity-report:
    type: object
    properties:
      remote_hosts:
        type: array
        items:
          $ref: '#/definitions/connectivity-remote-host'

  host-install-progress-params:
    type: string

  error:
    type: object
    required:
      - kind
      - id
      - href
      - code
      - reason
    properties:
      kind:
        type: string
        enum: ['Error']
        description: Indicates the type of this object. Will always be 'Error'.
      id:
        type: integer
        format: int32
        description: Numeric identifier of the error.
        minimum: 400
        maximum: 504
      href:
        type: string
        description: Self link.
      code:
        type: string
        description: Globally unique code of the error, composed of the unique identifier of the API and the numeric identifier of the error. For example, for if the numeric identifier of the error is 93 and the identifier of the API is assisted_install then the code will be ASSISTED-INSTALL-93.
      reason:
        type: string
        description: Human readable description of the error.


  interface:
    type: object
    properties:
      ipv6_addresses:
        type: array
        items:
          type: string
      vendor:
        type: string
      name:
        type: string
      has_carrier:
        type: boolean
      product:
        type: string
      mtu:
        type: integer
      ipv4_addresses:
        type: array
        items:
          type: string
      biosdevname:
        type: string
      client_id:
        type: string
      mac_address:
        type: string
      flags:
        type: array
        items:
          type: string

  disk:
    type: object
    properties:
      drive_type:
        type: string
      vendor:
        type: string
      name:
        type: string
      path:
        type: string
      hctl:
        type: string
      by_path:
        type: string
      model:
        type: string
      wwn:
        type: string
      serial:
        type: string
      size_bytes:
        type: integer

  boot:
    type: object
    properties:
      current_boot_mode:
        type: string
      pxe_interface:
        type: string

  system_vendor:
    type: object
    properties:
      serial_number:
        type: string
      product_name:
        type: string
      manufacturer:
        type: string

  memory:
    type: object
    properties:
      physical_bytes:
        type: integer
      usable_bytes:
        type: integer

  cpu:
    type: object
    properties:
      count:
        type: integer
      frequency:
        type: number
      flags:
        type: array
        items:
          type: string
      model_name:
        type: string
      architecture:
        type: string

  inventory:
    type: object
    properties:
      hostname:
        type: string
      bmc_address:
        type: string
      interfaces:
        type: array
        items:
          $ref: '#/definitions/interface'
      disks:
        type: array
        items:
          $ref: '#/definitions/disk'
      boot:
        $ref: '#/definitions/boot'
      system_vendor:
        $ref: '#/definitions/system_vendor'
      bmc_v6address:
        type: string
      memory:
        $ref: '#/definitions/memory'
      cpu:
        $ref: '#/definitions/cpu'
